import React, {Component} from 'react';
import cx from 'classnames';

const styles = require('./column.scss');

export default class Column extends Component {
	static propTypes = {
		occupy: React.PropTypes.number,
		of: React.PropTypes.number,
		isFlex: React.PropTypes.bool,
		isLast: React.PropTypes.bool,
		devMode: React.PropTypes.bool,
		children: React.PropTypes.oneOfType([
			React.PropTypes.arrayOf(React.PropTypes.node),
			React.PropTypes.node
		])
	}

	render() {
		const {
			isFlex = true,
			isLast = false,
			occupy = 12,
			of = 12,
			devMode = false,
			children
			} = this.props;
		//  magic number 16 is from the core gutter width and
		// THIS gutter width, bith of which are overlooked in this case
		let gutterWidth = isLast ? 0 : 16;
		let calcCorePerecent = occupy / of;
		let calcWidthCore = calcCorePerecent - ((16 - 16) * calcCorePerecent);
		console.info('calcWidthCore is: ', calcWidthCore);
		let calcWidth = (calcWidthCore * 0.999) * 100;
		console.info(calcWidth);
		let tempStyles = {
			width: (calcWidth) + '%'
		};
		return (
			<div
				data-occupy={occupy}
				data-of={of}
				className={cx(
					styles.Column,
					(devMode ? styles.devMode : ''),
					(isFlex ? styles.isFlex : ''))}
				style={tempStyles}
				>
				{children}
			</div>
		);
	}
}
